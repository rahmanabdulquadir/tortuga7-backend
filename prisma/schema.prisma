// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

// prisma/schema.prisma
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id          String   @id @default(uuid())
  email       String   @unique
  password    String
  name        String
  role        Role     @default(CLIENT)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  profile     Profile?
  resetToken      String?  
  resetTokenExp   DateTime?
  consultations Consultation[]
  gpuRentals  GPURental[]
  // orders         Order[]  
}

model Profile {
  id        String  @id @default(uuid())
  name      String
  phone     String?
  company   String?
  user      User    @relation(fields: [userId], references: [id])
  userId    String  @unique
}


// model Service {
//   id          String    @id @default(uuid())
//   name        String
//   description String?
//   products    Product[]  // ðŸ‘ˆ One-to-many relation
//   createdAt   DateTime @default(now())
//   updatedAt   DateTime @updatedAt
// }

// model Product {
//   id          String   @id @default(uuid())
//   name        String
//   description String?
//   price       Float
//   image       String?
//   service     Service  @relation(fields: [serviceId], references: [id])
//   serviceId   String

//   partner     Partner? @relation(fields: [partnerId], references: [id])
//   partnerId   String?

//   orderItems  OrderProduct[] 
//   specs       Specs?   @relation("ProductSpecs")

//   createdAt   DateTime @default(now())
//   updatedAt   DateTime @updatedAt
// }

// model Specs {
//   id                      String   @id @default(uuid())

//   product                 Product  @relation("ProductSpecs", fields: [productId], references: [id])
//   productId               String   @unique 

//   productSKUs             String?
//   motherboard             String?
//   processor               String?
//   systemMemory            String?
//   onBoardDevices          String?
//   inputOutput             String?
//   systemBIOS              String?
//   management              String?
//   security                String?
//   pcHealthMonitoring      String?
//   chassis                 String?
//   dimensionsAndWeight     String?
//   expansionSlots          String?
//   driveBaysStorage        String?
//   systemCooling           String?
//   powerSupply             String?
//   operatingEnvironment    String?

//   createdAt               DateTime @default(now())
//   updatedAt               DateTime @updatedAt
// }


model Service {
  id          String   @id @default(uuid())
  title       String
  description String
  items       Item[]   // One-to-Many
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Item {
  id             String   @id @default(uuid())
  title          String
  slug           String   @unique
  description    String
  keyApplications String[]
  keyFeatures     String[]
  specifications  Json
  images          String[]  // Array of image URLs
  serviceId       String
  service         Service  @relation(fields: [serviceId], references: [id])
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
}



model Consultation {
  id          String   @id @default(uuid())
  topic       String
  message     String
  status      String   @default("pending")
  scheduledAt DateTime
  user        User     @relation(fields: [userId], references: [id])
  userId      String
}

// model Partner {
//   id        String    @id @default(uuid())
//   name      String
//   logo      String
//   website   String?
//   products  Product[] // ðŸ‘ˆ One-to-many relation
//   createdAt DateTime  @default(now())
// }

model GPURental {
  id         String   @id @default(uuid())
  gpuType    String
  startDate  DateTime
  endDate    DateTime
  status     String   @default("active")
  user       User     @relation(fields: [userId], references: [id])
  userId     String
}

// model Order {
//   id          String         @id @default(uuid())
//   user        User   @relation(fields: [userId], references: [id])
//   userId      String

//   orderItems  OrderProduct[]  // ðŸ‘ˆ relation to the join table

//   totalAmount Float
//   status      OrderStatus     @default(PENDING)

//   createdAt   DateTime        @default(now())
//   updatedAt   DateTime        @updatedAt
// }

// model OrderProduct {
//   id        String   @id @default(uuid())

//   order     Order    @relation(fields: [orderId], references: [id])
//   orderId   String

//   product   Product  @relation(fields: [productId], references: [id])
//   productId String

//   quantity  Int      @default(1)

//   createdAt DateTime @default(now())
// }

model Blog {
  id          String   @id @default(uuid())
  title       String
  content     String
  finalWords  String
  image       String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}


model Contact {
  id      String @id @default(uuid())
  name    String
  email   String
  message String
  phone   String? // previously was "Phone"
  createdAt DateTime @default(now())
}


enum Role {
  ADMIN
  CLIENT
  STAFF
}

enum OrderStatus {
  PENDING
  PAID
  FAILED
  CANCELLED
}

